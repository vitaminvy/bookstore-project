@page
@model QuanLyNhaSach.Pages.Sach.ImportModel
@{
    ViewData["Title"] = "T·∫°o Phi·∫øu Nh·∫≠p S√°ch"; // S·ª≠a Title cho r√µ r√†ng h∆°n
}

<h2>üì¶ @ViewData["Title"]</h2>

@if (!string.IsNullOrEmpty(Model.ThongBao))
{
    @* Ph√¢n bi·ªát lo·∫°i th√¥ng b√°o d·ª±a tr√™n k√Ω t·ª± ƒë·∫ßu ti√™n *@
    var alertClass = Model.ThongBao.StartsWith("‚úÖ") ? "alert-success" : (Model.ThongBao.StartsWith("‚ùå") ? "alert-danger" : "alert-info");
    <div class="alert @alertClass mt-3">@Html.Raw(Model.ThongBao.ReplaceLineEndings("<br />"))</div>
}

<form method="post">

    @* TH√äM: Hi·ªÉn th·ªã t√≥m t·∫Øt c√°c l·ªói kh√¥ng thu·ªôc v·ªÅ tr∆∞·ªùng c·ª• th·ªÉ, ho·∫∑c t·∫•t c·∫£ l·ªói *@
    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
    @* Ho·∫∑c d√πng "All" n·∫øu mu·ªën hi·ªÉn th·ªã c·∫£ l·ªói c·ªßa t·ª´ng tr∆∞·ªùng ·ªü ƒë√¢y: *@
    @* <div asp-validation-summary="All" class="text-danger mb-3"></div> *@


    <div class="mb-3">
        <label asp-for="SelectedNCC" class="form-label">Ch·ªçn Nh√† Cung C·∫•p</label> @* TH√äM asp-for cho label *@
        <select asp-for="SelectedNCC" asp-items="Model.NhaCungCapList" class="form-select">
            @* ƒê·ªïi form-control th√†nh form-select cho nh·∫•t qu√°n *@
            <option value="">-- Ch·ªçn nh√† cung c·∫•p --</option>
        </select>
        @* TH√äM: Hi·ªÉn th·ªã l·ªói validation cho tr∆∞·ªùng SelectedNCC *@
        <span asp-validation-for="SelectedNCC" class="text-danger d-block"></span>
    </div>

    <hr class="my-4" />
    <h5>Chi ti·∫øt S√°ch Nh·∫≠p</h5>
    <div id="books-container">
        @* Ph·∫ßn n√†y s·∫Ω ƒë∆∞·ª£c JavaScript x·ª≠ l√Ω ƒë·ªÉ th√™m c√°c d√≤ng s√°ch.
           B·∫°n c√≥ th·ªÉ render m·ªôt d√≤ng m·∫´u ·ªü ƒë√¢y n·∫øu Model.Books c√≥ ph·∫ßn t·ª≠ ban ƒë·∫ßu,
           ho·∫∑c ƒë·ªÉ JavaScript t·∫°o d√≤ng ƒë·∫ßu ti√™n.
           Hi·ªán t·∫°i, code c·ªßa b·∫°n render d√≤ng Books[0] c·ªë ƒë·ªãnh.
        *@
        @if (Model.Books != null && Model.Books.Count > 0)
        {
            for (int i = 0; i < Model.Books.Count; i++)
            {
                <div class="row g-2 mb-2 book-row">
                    <div class="col-md-5">
                        <label class="form-label d-none">S√°ch</label> @* Label ·∫©n cho accessibility n·∫øu c·∫ßn *@
                        <select name="Books[@i].MaSach" asp-for="Books[i].MaSach" asp-items="Model.SachList" class="form-select">
                            <option value="">-- Ch·ªçn s√°ch --</option>
                        </select>
                        <span asp-validation-for="Books[@i].MaSach" class="text-danger"></span>
                    </div>
                    <div class="col-md-3">
                        <label class="form-label d-none">S·ªë l∆∞·ª£ng</label>
                        <input name="Books[@i].SoLuong" asp-for="Books[i].SoLuong" type="number" class="form-control" placeholder="S·ªë l∆∞·ª£ng" min="1" />
                        <span asp-validation-for="Books[@i].SoLuong" class="text-danger"></span>
                    </div>
                    <div class="col-md-3">
                        <label class="form-label d-none">Gi√° nh·∫≠p</label>
                        <input name="Books[@i].GiaNhap" asp-for="Books[i].GiaNhap" type="number" step="0.01" class="form-control" placeholder="Gi√° nh·∫≠p" min="0.01" />
                        <span asp-validation-for="Books[i].GiaNhap" class="text-danger"></span>
                    </div>
                    <div class="col-md-1 align-self-end">
                        <button type="button" class="btn btn-danger btn-sm" onclick="removeBookRow(this)">X√≥a</button>
                    </div>
                </div>
            }
        }
        else
        {
            @* C√≥ th·ªÉ t·∫°o m·ªôt d√≤ng m·∫´u ƒë·∫ßu ti√™n ·ªü ƒë√¢y n·∫øu mu·ªën *@
            <div class="row g-2 mb-2 book-row">
                <div class="col-md-5">
                    <label class="form-label d-none">S√°ch</label>
                    <select name="Books[0].MaSach" class="form-select">
                        <option value="">-- Ch·ªçn s√°ch --</option>
                        @foreach (var item in Model.SachList)
                        {
                            <option value="@item.Value">@item.Text</option>
                        }
                    </select>
                    <span asp-validation-for="Books[0].MaSach" class="text-danger"></span>
                </div>
                <div class="col-md-3">
                    <label class="form-label d-none">S·ªë l∆∞·ª£ng</label>
                    <input name="Books[0].SoLuong" type="number" value="1" class="form-control" placeholder="S·ªë l∆∞·ª£ng" min="1" />
                    <span asp-validation-for="Books[0].SoLuong" class="text-danger"></span>
                </div>
                <div class="col-md-3">
                    <label class="form-label d-none">Gi√° nh·∫≠p</label>
                    <input name="Books[0].GiaNhap" type="number" step="0.01" value="0" class="form-control" placeholder="Gi√° nh·∫≠p" min="0.01" />
                    <span asp-validation-for="Books[0].GiaNhap" class="text-danger"></span>
                </div>
                <div class="col-md-1 align-self-end">
                    @* N√∫t x√≥a kh√¥ng c·∫ßn cho d√≤ng ƒë·∫ßu ti√™n n·∫øu n√≥ ƒë∆∞·ª£c render c·ªë ƒë·ªãnh *@
                </div>
            </div>
        }
    </div>

    <button type="button" class="btn btn-secondary mt-2" onclick="themSach()">‚ûï Th√™m s√°ch</button>

    <div class="mt-4">
        <button type="submit" class="btn btn-success">‚úÖ X√°c nh·∫≠n nh·∫≠p</button>
    </div>

</form>

@* TH√äM SECTION N√ÄY ƒê·ªÇ K√çCH HO·∫†T CLIENT-SIDE VALIDATION *@
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        let bookIndex = @Model.Books.Count; // Kh·ªüi t·∫°o index d·ª±a tr√™n s·ªë s√°ch ƒë√£ c√≥ (n·∫øu c√≥)
        // N·∫øu kh√¥ng c√≥ s√°ch n√†o ban ƒë·∫ßu, v√† b·∫°n render d√≤ng m·∫´u ƒë·∫ßu ti√™n,
        // th√¨ bookIndex n√™n b·∫Øt ƒë·∫ßu t·ª´ 1 (v√¨ Books[0] ƒë√£ ƒë∆∞·ª£c render)
        if (bookIndex === 0 && document.querySelector('[name="Books[0].MaSach"]')) {
            bookIndex = 1;
        }


        // L·∫•y HTML c·ªßa c√°c options cho dropdown s√°ch m·ªôt l·∫ßn
        const sachOptionsHtml = `
            <option value="">-- Ch·ªçn s√°ch --</option>
            @foreach (var item in Model.SachList)
            {
                    // C·∫©n th·∫≠n v·ªõi k√Ω t·ª± ƒë·∫∑c bi·ªát trong item.Text n·∫øu c√≥
                    <text><option value="@item.Value">@Html.Raw(System.Web.HttpUtility.JavaScriptStringEncode(item.Text ?? ""))</option></text>
            }
        `;

        function themSach() {
            var container = document.getElementById('books-container');
            var newRowDiv = document.createElement('div');
            newRowDiv.className = 'row g-2 mb-2 book-row';
            newRowDiv.innerHTML = `
                <div class="col-md-5">
                    <select name="Books[${bookIndex}].MaSach" class="form-select" required>
                        ${sachOptionsHtml}
                    </select>
                    <span class="text-danger" data-valmsg-for="Books[${bookIndex}].MaSach"></span>
                </div>
                <div class="col-md-3">
                    <input name="Books[${bookIndex}].SoLuong" type="number" class="form-control" placeholder="S·ªë l∆∞·ª£ng" min="1" value="1" required />
                    <span class="text-danger" data-valmsg-for="Books[${bookIndex}].SoLuong"></span>
                </div>
                <div class="col-md-3">
                    <input name="Books[${bookIndex}].GiaNhap" type="number" step="any" class="form-control" placeholder="Gi√° nh·∫≠p" min="0.01" value="0" required />
                    <span class="text-danger" data-valmsg-for="Books[${bookIndex}].GiaNhap"></span>
                </div>
                <div class="col-md-1 align-self-center">
                    <button type="button" class="btn btn-danger btn-sm" onclick="removeBookRow(this)">X√≥a</button>
                </div>
            `;
            container.appendChild(newRowDiv);

            // K√≠ch ho·∫°t l·∫°i client-side validation cho form n·∫øu c·∫ßn (ƒë·∫∑c bi·ªát n·∫øu d√πng jQuery Unobtrusive)
            var form = document.querySelector("form");
            if (form && window.jQuery && jQuery.validator && jQuery.validator.unobtrusive) {
                jQuery(form).removeData("validator");
                jQuery(form).removeData("unobtrusiveValidation");
                jQuery.validator.unobtrusive.parse(form);
            }
            bookIndex++;
        }

        function removeBookRow(button) {
            button.closest('.book-row').remove();
            // Kh√¥ng c·∫ßn gi·∫£m bookIndex v√¨ server binding d·ª±a tr√™n ch·ªâ s·ªë tu·∫ßn t·ª±
        }
    </script>
}