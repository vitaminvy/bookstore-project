@page
@model QuanLyNhaSach.Pages.HoaDon.CreateHoaDonModel
@{
    ViewData["Title"] = "Tạo Hóa Đơn";
}

<h2 class="text-xl font-bold mb-4">Tạo Hóa Đơn</h2>

<form method="post">
    @* Sửa asp-validation-summary thành ModelOnly hoặc bỏ đi nếu dùng span cho từng trường *@
    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
        <div>
            <label asp-for="Input.SoDienThoai" class="block text-sm font-medium text-gray-700">Khách hàng</label>
            <select asp-for="Input.SoDienThoai" asp-items="Model.KhachHangList" class="mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
                <option value="">-- Chọn khách hàng --</option>
            </select>
            <span asp-validation-for="Input.SoDienThoai" class="text-sm text-red-600"></span>
        </div>

        <div>
            <label asp-for="Input.MaKhuyenMai" class="block text-sm font-medium text-gray-700">Khuyến mãi (nếu có)</label>
            <select asp-for="Input.MaKhuyenMai" asp-items="Model.KhuyenMaiList" class="mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
                <option value="">-- Không áp dụng --</option>
            </select>
            <span asp-validation-for="Input.MaKhuyenMai" class="text-sm text-red-600"></span>
        </div>
    </div>

    <h3 class="text-lg font-medium mb-2">Chi tiết hóa đơn</h3>
    <table class="min-w-full divide-y divide-gray-200 mb-4">
        <thead class="bg-gray-50">
            <tr>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Mã sách</th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Số lượng</th>
                <th scope="col" class="relative px-6 py-3">
                    <span class="sr-only">Xóa</span>
                </th>
            </tr>
        </thead>
        <tbody id="product-rows" class="bg-white divide-y divide-gray-200">
            @for (int i = 0; i < Model.ChiTiet.Count; i++)
            {
                <tr>
                    <td class="px-6 py-4 whitespace-nowrap">
                        @* THAY ĐỔI INPUT THÀNH SELECT CHO MÃ SÁCH *@
                        <select name="ChiTiet[@i].MaSach" asp-for="ChiTiet[i].MaSach" asp-items="Model.SachList" class="form-select w-full mt-1 block py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
                            <option value="">-- Chọn sách --</option>
                        </select>
                        <span asp-validation-for="ChiTiet[i].MaSach" class="text-sm text-red-600"></span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <input name="ChiTiet[@i].SoLuong" asp-for="ChiTiet[i].SoLuong" type="number" class="form-input mt-1 block w-full py-2 px-3 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" min="1" />
                        <span asp-validation-for="ChiTiet[i].SoLuong" class="text-sm text-red-600"></span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                        <button type="button" onclick="removeRow(this)" class="text-red-600 hover:text-red-900">Xoá</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="flex items-center justify-between mt-4">
        <button type="button" onclick="addRow()" class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
            + Thêm sản phẩm
        </button>
        <button type="submit" class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
            Lưu hóa đơn
        </button>
    </div>
</form>

@if (!string.IsNullOrEmpty(Model.Message))
{
    <div class="mt-4 @(Model.Message.StartsWith("✔️") ? "bg-green-100 border border-green-400 text-green-700" : "bg-red-100 border border-red-400 text-red-700") px-4 py-3 rounded relative" role="alert">
        <strong class="font-bold">@(Model.Message.StartsWith("✔️") ? "Thành công!" : "Lỗi!")</strong>
        <span class="block sm:inline">@Html.Raw(Model.Message.Substring(2).ReplaceLineEndings("<br />"))</span>
    </div>
}

@* Đoạn này có thể không cần nữa nếu dùng asp-validation-summary="ModelOnly" và các span validation *@
@* @if (!ViewData.ModelState.IsValid && ViewData.ModelState.ErrorCount > 0 && !ViewData.ModelState.Keys.Contains(string.Empty))
{
    <div class="alert alert-danger mt-3">
        <p>Vui lòng sửa các lỗi sau:</p>
        @Html.ValidationSummary(false)
    </div>
} *@


@section Scripts {
    <script>
        // Chuyển danh sách sách từ C# Model sang JavaScript array
        const sachOptionsForJs = @Html.Raw(Json.Serialize(Model.SachList
                    .Select(s => new { value = s.Value, text = s.Text })));

    let rowIndex = @Model.ChiTiet.Count;

        function addRow() {
            let optionsHtml = '<option value="">-- Chọn sách --</option>';
            sachOptionsForJs.forEach(option => {
                // Escape HTML entities in option.text if it can contain special characters
                const escapedText = option.text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;');
                optionsHtml += `<option value="${option.value}">${escapedText}</option>`;
            });

            const rowHtml = `
                <tr class="border-t border-gray-200">
                    <td class="px-6 py-4 whitespace-nowrap">
                        <select name="ChiTiet[${rowIndex}].MaSach" class="form-select mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" required>
                            ${optionsHtml}
                        </select>
                        <span class="text-sm text-red-600" data-valmsg-for="ChiTiet[${rowIndex}].MaSach"></span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <input name="ChiTiet[${rowIndex}].SoLuong" type="number" class="form-input mt-1 block w-full py-2 px-3 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" required min="1" value="1" />
                        <span class="text-sm text-red-600" data-valmsg-for="ChiTiet[${rowIndex}].SoLuong"></span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                        <button type="button" onclick="removeRow(this)" class="text-red-600 hover:text-red-900">Xoá</button>
                    </td>
                </tr>`;
            document.getElementById('product-rows').insertAdjacentHTML('beforeend', rowHtml);

            // Kích hoạt lại jQuery unobtrusive validation cho các element mới thêm (nếu bạn dùng jQuery validation)
            // var form = $("form"); // Hoặc lấy form theo ID
            // form.removeData("validator");
            // form.removeData("unobtrusiveValidation");
            // $.validator.unobtrusive.parse(form);

            rowIndex++;
        }

        function removeRow(button) {
            button.closest('tr').remove();
            // Không cần giảm rowIndex vì tên input dựa trên số lượng dòng khi submit
        }
    </script>
}